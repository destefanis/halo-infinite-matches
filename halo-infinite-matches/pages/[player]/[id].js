import React, { useEffect, useState } from "react";
import axios from "axios";

import Head from 'next/head'
import Image from 'next/image'

import styles from '../../styles/Home.module.css'
import { useRouter } from 'next/router';

export default function Overview(props) {
  const { asPath } = useRouter();
  const [matchResults, setMatchResults] = useState([]);
  const [matchLoaded, setMatchLoaded] = useState(false);
  const gamertag = "shesjustaglitch";

  React.useEffect(() => {
    function getMatchResults() {
      const url = "https://halo.api.stdlib.com/infinite@0.3.3/stats/matches/retrieve/"
      const token = "tok_dev_qYAJqr8JHrsXH8A2CuGWK4aK8Sc7TcEWSi8zKUSnbDSx8kXZvmMfzdX4nq1k89Mg";
      
      axios({
        url,
        method: "get",
        headers: {
          Authorization: `Bearer ${token}`
        },
        params: {
          id: props.id
        }
      })
        .then((response) => {
          setMatchResults(response.data.data);
          setMatchLoaded(true);
          console.log(response.data.data);
        })
        .catch((err) => {
          console.log(err, "error");
        });
    }
    getMatchResults();
  });

  let results = [];
  results = matchResults;


  function MatchResults(props) {
    const resultsLoaded = props.loaded;
    if (resultsLoaded) {
      return (
        <div><span>{results.teams.details[1].stats.core.summary.kills}</span> - <span>{results.teams.details[0].stats.core.summary.kills}</span></div>
      );
    }
    return (
      <div></div>
    );
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Halo Infinite Matches - Match</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Match {props.id}
        </h1>
        <MatchResults loaded={matchLoaded} />

      </main>
    </div>
  )
}

export async function getServerSideProps(context) {

  return {
    props: {
      id: context.params.id
    }, // will be passed to the page component as props
  }
}